// Generated by CoffeeScript 1.9.0
var PhaserBootState, PhaserPlayState, PhaserPreloaderState,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __hasProp = {}.hasOwnProperty;

PhaserBootState = (function(_super) {
  __extends(PhaserBootState, _super);

  function PhaserBootState() {
    PhaserBootState.__super__.constructor.apply(this, arguments);
  }

  PhaserBootState.prototype.preload = function() {
    return this.assetPrefix = "assets/images/";
  };

  PhaserBootState.prototype.create = function() {
    return this.game.state.start("Preloader", true, false);
  };

  return PhaserBootState;

})(Phaser.State);

PhaserPreloaderState = (function(_super) {
  __extends(PhaserPreloaderState, _super);

  function PhaserPreloaderState() {
    PhaserPreloaderState.__super__.constructor.apply(this, arguments);
  }

  PhaserPreloaderState.prototype.preload = function() {
    this.assetPrefix = "assets/images/";
    return this.loadAssets();
  };

  PhaserPreloaderState.prototype.getAssetPath = function(asset) {
    return this.assetPrefix + asset;
  };

  PhaserPreloaderState.prototype.loadAssets = function() {
    this.game.time.advancedTiming = true;
    console.log('Loading Phaser assets...');
    console.log(this.getAssetPath("background.png"));
    this.game.load.image("background", this.getAssetPath("background.png"));
    return this.game.load.image("player", this.getAssetPath("player_dev.png"));
  };

  PhaserPreloaderState.prototype.create = function() {
    return this.game.state.start("Play", true, false);
  };

  return PhaserPreloaderState;

})(Phaser.State);

PhaserPlayState = (function(_super) {
  __extends(PhaserPlayState, _super);

  function PhaserPlayState() {
    PhaserPlayState.__super__.constructor.apply(this, arguments);
  }

  PhaserPlayState.prototype.init = function() {
    console.log('Setting background');
    return window.coreGame.networkHelper.on_phaser_loaded();
  };

  PhaserPlayState.prototype.render = function() {
    return this.game.debug.text(this.game.time.fps || '--', 2, 14, "#00ff00");
  };

  return PhaserPlayState;

})(Phaser.State);

window.PhaserBootState = PhaserBootState;

window.PhaserPreloaderState = PhaserPreloaderState;

window.PhaserPlayState = PhaserPlayState;
